 Each of the following two procedures defines a method for adding two positive integers in terms of the procedures inc, which increments its argument by 1, and dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0)
      b
      (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
      b
      (+ (dec a) (inc b))))

Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5). Are these processes iterative or recursive?

(+ 4 5)

====>

First procedure "shape"

==> (inc (+ 3 5))
==> (inc ( inc (+ 2 5) ))
==> (inc ( inc ( inc (+ 1 5) )))
==> (inc ( inc ( inc ( inc ( + 0 5) ))))
==> (inc ( inc ( inc ( inc 5))))
==> (inc ( inc ( inc 6)))
=== (inc ( inc 7))
==> (inc 8)
==> 9

Since this procedure contains a series of deferred operations, it exhibits an expansion initially and 
contracts afterwards. This is a "recursive" procedure.

Second procedure "shape"

==> (+ (dec 4) (inc 5))
==> (+ 3 6)
==> (+ 2 7)
==> (+ 1 8)
==> (0 9)
==> 9

This is an "iterative" process. Application-order evaluation causes the dec and inc functions to evaluate First
for every step. Thus, each step updates the state variables a and b in successions. No deferred operations

